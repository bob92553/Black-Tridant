# To use this config, the firmware should be compiled for the STM32F446.
# enable "extra low-level configuration setup"
# and select the "12MHz crystal" as clock reference
# For flashing, write the compiled klipper.bin to memory location 0x08000000

[include mainsail.cfg]
[include macros.cfg]
[include autoz.cfg]
[include euclid.cfg]
[exclude_object]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_230041001650563046363120-if00

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 4000
#max_accel_to_decel: 10000
max_z_velocity: 15	
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to X-MOT (B Motor)
step_pin: PE11
dir_pin: !PE10
enable_pin: !PE9
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  
endstop_pin: ^PB14 # X-MAX

position_min: 0
position_endstop: 350
position_max: 350

homing_speed: 65   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PE7
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


##--------------------------------------------------------------------

[stepper_y]
##	Connected to Y-MOT (A Motor)
step_pin: PD8
dir_pin: !PB12
enable_pin: !PD9
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  
endstop_pin: ^PB13 # Y-MAX
position_min: 0

position_endstop: 350
position_max: 350

homing_speed: 65  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PE15
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#      Z Stepper's Settings
#####################################################################

## In E3-MOT Position
## Z0 Stepper - Z Left Motor
[stepper_z]
step_pin: PD14
dir_pin: PD13
enable_pin: !PD15
rotation_distance: 8
full_steps_per_rotation: 200
microsteps: 32
endstop_pin: PA0
#endstop_pin: probe:z_virtual_endstop
position_min: -10
position_max: 250
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PD10
uart_address: 0
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 9999999


##	In E2-MOT Position
##	Z1 Stepper - Z Rear Motor
[stepper_z1]
step_pin: PE6
dir_pin: PC13
enable_pin: !PE5
rotation_distance: 8
full_steps_per_rotation: 200
microsteps: 32

[tmc2209 stepper_z1]
uart_pin: PC14
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 9999999


##	In E1-MOT Position
##	Z2 Stepper - Z Right Motor
[stepper_z2]
step_pin: PE2
dir_pin: PE4
enable_pin: !PE3
rotation_distance: 8
full_steps_per_rotation: 200
microsteps: 32

[tmc2209 stepper_z2]
uart_pin: PC15
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 9999999


#####################################################################
#      Input Shapper Settings
#####################################################################

[input_shaper]
shaper_freq_x: 54.8
shaper_type_x: mzv
shaper_freq_y: 40
shaper_type_y: mzv


#####################################################################
#   Extruder
#####################################################################
[extruder]
step_pin: PD5
dir_pin: PD6
enable_pin: !PD4

#rotation_distance: 22.6789511	#Bondtech 5mm Drive Gears
#gear_ratio: 50:17				#BMG Gear Ratio
#microsteps: 32
#full_steps_per_rotation: 200

rotation_distance: 8
microsteps: 16
full_steps_per_rotation: 200

nozzle_diameter: 0.6
filament_diameter: 1.75
##      In E0 OUT Position
heater_pin: PB15
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PC0
min_temp: 10
max_temp: 300
max_power: 1
min_extrude_temp: 170
pressure_advance: 0.035
#pressure_advance_smooth_time: 0.040

##	In E0-MOT Position
[tmc2209 extruder]
uart_pin: PD7
interpolate: false
run_current: 0.5 #0.45
hold_current: 0.3
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Bed Heater
#####################################################################
[heater_bed]
heater_pin: PB4
sensor_type: Generic 3950
sensor_pin: PB0
max_power: 0.75
min_temp: 0
max_temp: 145
pwm_cycle_time: 0.01666

#####################################################################
#    Euclid Probe
#####################################################################
[probe]
##    Euclid Probe
pin: PA3                  ; use pin PA0 and enable internal pullup resistor as this is an NC switch  use ! to invert if needed
x_offset: 2.0                ; probe is offset 2.0mm from nozzle
y_offset: 25.0               ; probe is +25mm from nozzle in Y direction
z_offset: 11.35              ; trigger point is 9.5mm below nozzle. larger numbers move effective Z0 CLOSER to the nozzle
speed: 5                     ; probing speed of 5mm/second ideal is <10mm/sec  
lift_speed: 10               ; probe lift speed
samples: 3                   ; number of probes to perform per sample
samples_result: median      ; normalization method: see config reference
sample_retract_dist: 3.0
samples_tolerance: 0.0075
samples_tolerance_retries: 3

[force_move]
enable_force_move: TRUE



#####################################################################
#	Fan Control
#####################################################################

[heater_fan hotend_fan]
##	Hotend Fan - FAN0 Connector
pin: PA13 
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[fan]
##	Print Cooling Fan - FAN1 Connector
pin: PA14 
max_power: 1.0
kick_start_time: 0.5
off_below: 0.10

[controller_fan Controller Fan]
kick_start_time: 0.5
heater: heater_bed
pin: PB2
fan_speed: 1
max_power: 1

#[heater_generic heater_chamber]
#heater_pin: PC8
#max_power: 1
#sensor_type: ATC Semitec 104NT-4-R025H42G
#sensor_pin: PC3
#min_temp: 0
#max_temp: 110
#gcode_id: C

#smooth_time:
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
#pwm_cycle_time:

#[heater_fan chamber_fan]
#pin: PB3 
#max_power: 1.0
#kick_start_time: 0.5
#heater: heater_chamber
#heater_temp: 50.0


#[verify_heater heater_chamber]
#max_error: 120000
#check_gain_time: 120000
#hysteresis: 5
#heating_gain: 1


#######################################
#### Enclosure Temp Sensor Section ####
#######################################

#[thermistor Chamber_Temp]
#temperature1: 25
#resistance1: 100000
#temperature2: 160
#resistance2: 1074
#temperature3: 300
#resistance3: 82.78


[thermistor PCB_temp]
temperature1: 25
resistance1: 10000
beta: 3950


[temperature_sensor PCB_temp]
sensor_type: PCB_temp
sensor_pin: PB1
min_temp: 0
max_temp: 150
gcode_id: D





#####################################################################
#	LED Control
#####################################################################
# Macros for setting the status leds on the Voron StealthBurner toolhead (or for any neopixel-type leds).
#
# You will need to configure a neopixel (or other addressable led, such as dotstar). See
# https://www.klipper3d.org/Config_Reference.html#neopixel for configuration details.


#####################################
#           INSTRUCTIONS            #
#####################################
# How to use all this stuff:
#
#     1.  Copy this .cfg file into your Klipper config directory and then add [include stealthburner_leds.cfg]
#         to the top of your printer.cfg in order to register the LEDs and macros with Klipper.
#     2.  Define your LEDs by editing [neopixel sb_leds] below and entering the data pin from your control board
#         as well as the color order.
#
#           Note: RGB and RGBW are different and must be defined explicitly.  RGB and RGBW are also not able to 
#                 be mix-and-matched in the same chain. A separate data line would be needed for proper functioning.
#
#                 RGBW LEDs will have a visible yellow-ish phosphor section to the chip.  If your LEDs do not have
#                 this yellow portion, you have RGB LEDs.
#
#     3.  Save your config and restart Klipper.
#
#           Note: We set RED and BLUE to 1.0 to make it easier for users and supporters to detect 
#                 misconfigurations or miswiring. The default color format is for Neopixels with a dedicated 
#                 white LED. On startup, all three SB LEDs should light up.
#
#                 If you get random colors across your LEDs, change the color_order to GRB and restart. Then
#                 omit the W for each suggested color_order in the next paragraph.
#
#                 If you get MAGENTA, your  color order is correct. If you get CYAN, you need to use RGBW. If
#                 you get YELLOW, you need to use BRGW (note that BRG is only supported in the latest Klipper
#                 version).
#
#     4.  Once you have confirmed that the LEDs are set up correctly, you must now decide where you want 
#         these macros called up...which means adding them to your existing gcode macros.  NOTHING will happen
#         unless you add the STATUS_????? macros to your existing gcode macros.  
#
#           Example: add STATUS_LEVELING to the beginning of your QGL gcode macro, and then add STATUS_READY 
#                    to the end of it to set the logo LED and nozzle LEDs back to the `ready` state.
#
#           Example: add STATUS_CLEANING to the beginning of your nozzle-cleaning macro, and then STATUS_READY
#                    to the end of it to return the LEDs back to `ready` state.
#
#     5.  Feel free to change colors of each macro, create new ones if you have a need to.  The macros provided below
#         are just an example of what is possible.  If you want to try some more complex animations, you will most
#         likely have to use WLED with Moonraker and a small micro-controller 
#
#####################################
#       END INSTRUCTRUCTIONS        #
#####################################


[neopixel sb_leds]
pin: PD3
#   The pin connected to the neopixel. This parameter must be provided.
chain_count: 3
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRBW
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 1.0
initial_GREEN: 0.0
initial_BLUE: 1.0
initial_WHITE: 1.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.#

# Most configuration for the macros can be done by modifying the variables in the _sb_vars macro
# at the start of this file.

##########
# MACROS #
##########

# The following status macros are available (these go inside of your macros):
#
#    STATUS_READY
#    STATUS_OFF
#    STATUS_BUSY
#    STATUS_HEATING
#    STATUS_LEVELING
#    STATUS_HOMING
#    STATUS_CLEANING
#    STATUS_MESHING
#    STATUS_CALIBRATING_Z
#
# With additional macros for basic control:
#
#    SET_NOZZLE_LEDS_ON
#    SET_LOGO_LEDS_OFF
#    SET_NOZZLE_LEDS_OFF
#
# Contributed by Voron discord users wile.e, Tetsunosuke, and etherwalker


[gcode_macro _sb_vars]
# User settings for the StealthBurner status leds. You can change the status colors and led
# configurations for the logo and nozzle here.
variable_colors: {
        'logo': { # Colors for logo states
            'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},
            'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},
            'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},
            'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},
            'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},
            'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'printing': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'standby': {'r': 0.01, 'g': 0.01, 'b': 0.01, 'w': 0.1},
        },
        'nozzle': { # Colors for nozzle states
            'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},
            'standby': {'r': 0.6, 'g': 0.0, 'b': 0.0, 'w':0.0},
        },
        'thermal': {
            'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}
        }
    }
variable_logo_led_name:         "sb_leds" 
# The name of the addressable LED chain that contains the logo LED(s)
variable_logo_idx:              "1" 
# A comma-separated list of indexes LEDs in the logo
variable_nozzle_led_name:       "sb_leds"
# The name of the addressable LED chain that contains the nozzle LED(s). This will
# typically be the same LED chain as the logo.
variable_nozzle_idx:            "2,3"
# A comma-separated list of indexes of LEDs in the nozzle
gcode:
    # This section is required.  Do Not Delete.


[gcode_macro _set_sb_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = params.LED|string %}
    {% set idx = (params.IDX|string).split(',') %}
    {% set transmit_last = params.TRANSMIT|default(1) %}

    {% for led_index in idx %}
        {% set transmit=transmit_last if loop.last else 0 %}
        set_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}
    {% endfor %}

[gcode_macro _set_sb_leds_by_name]
gcode:
    {% set leds_name = params.LEDS %}
    {% set color_name = params.COLOR %}
    {% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}
    {% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}
    {% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}
    {% set transmit = params.TRANSMIT|default(1) %}

    _set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}

[gcode_macro _set_logo_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _sb_vars"].logo_led_name %}
    {% set idx = printer["gcode_macro _sb_vars"].logo_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro _set_nozzle_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}
    {% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro set_logo_leds_off]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}

[gcode_macro set_nozzle_leds_on]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}

[gcode_macro set_nozzle_leds_off]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}

[gcode_macro status_off]
gcode:
    set_logo_leds_off transmit=0
    set_nozzle_leds_off

[gcode_macro status_ready]
gcode:
    _set_sb_leds_by_name leds="logo" color="standby" transmit=0
    _set_sb_leds_by_name leds="nozzle" color="standby" transmit=1

[gcode_macro status_busy]
gcode:
    _set_sb_leds_by_name leds="logo" color="busy" transmit=0
    set_nozzle_leds_on

[gcode_macro status_heating]
gcode:
    _set_sb_leds_by_name leds="logo" color="heating" transmit=0
    _set_sb_leds_by_name leds="nozzle" color="heating" transmit=1

[gcode_macro status_leveling]
gcode:
    _set_sb_leds_by_name leds="logo" color="leveling" transmit=0
    set_nozzle_leds_on

[gcode_macro status_homing]
gcode:
    _set_sb_leds_by_name leds="logo" color="homing" transmit=0
    set_nozzle_leds_on

[gcode_macro status_cleaning]
gcode:
    _set_sb_leds_by_name leds="logo" color="cleaning" transmit=0
    set_nozzle_leds_on

[gcode_macro status_meshing]
gcode:
    _set_sb_leds_by_name leds="logo" color="meshing" transmit=0
    set_nozzle_leds_on

[gcode_macro status_calibrating_z]
gcode:
    _set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0
    set_nozzle_leds_on

[gcode_macro status_printing]
gcode:
    _set_sb_leds_by_name leds="logo" color="printing" transmit=0
    set_nozzle_leds_on



#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################
[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position:198,342
speed:100
z_hop:10


[idle_timeout]
timeout: 1800
   
[z_tilt]
##	Use Z_TILT_ADJUST to level the bed .
##	z_positions: Location of toolhead

z_positions:
	-46, 20
	175, 363
	396, 20
points:
	30, 25
	175, 295
	320, 25

#--------------------------------------------------------------------
speed: 200
horizontal_move_z: 30
retries: 12
retry_tolerance: 0.005

[bed_mesh]
speed: 120
horizontal_move_z: 30

mesh_min: 35,26
mesh_max: 300, 270

probe_count: 5, 5
relative_reference_index: 24
algorithm: bicubic

#####################################################################
#	Displays
#####################################################################

#--------------------------------------------------------------------

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: PC11
a0_pin: PD2
rst_pin: PC10
encoder_pins: ^PC6,^PC7
click_pin: ^!PA8
contrast: 63
#spi_bus: spi1
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5

[neopixel fysetc_mini12864]
#	To control Neopixel RGB in mini12864 display
pin: PC12
chain_count: 3
chain_count: 60
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

#	Set RGB values on boot up for each Neopixel. 
#	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 


[temperature_sensor tmc2209_stepper_x]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor tmc2209_stepper_y]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor tmc2209_extruder]
sensor_type: temperature_host
min_temp: 10
max_temp: 100


#--------------------------------------------------------------------

#####################################################################
#	Raspberry pi tuning
#####################################################################
[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
  175,175,20

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 80

[temperature_sensor mcu_temp]
## Spider Temps
sensor_type: temperature_mcu
max_temp: 100

#--------------------------------------------------------------------

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 0.893
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 36.226
#*# pid_ki = 3.354
#*# pid_kd = 97.809
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 36.909
#*# pid_ki = 0.973
#*# pid_kd = 350.179
#*#
#*# [probe]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.012500, 0.047500, 0.115000, 0.088750, 0.046250
#*# 	0.006250, 0.078750, 0.138750, 0.091250, 0.022500
#*# 	0.060000, 0.076250, 0.081250, 0.050000, 0.023750
#*# 	-0.003750, -0.017500, 0.093750, -0.015000, -0.018750
#*# 	-0.025000, 0.010000, 0.061250, 0.152500, 0.000000
#*# tension = 0.2
#*# min_x = 35.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 26.0
#*# x_count = 5
#*# max_y = 270.0
#*# mesh_x_pps = 2
#*# max_x = 300.0
